worker_processes 1;
error_log /dev/stderr info;

events {
    worker_connections 1024;
}


http {
  # Define the backend upstream
  upstream backend {
    server backend:3000;   # service name in docker-compose plus port
  }

  

  server {

    


    listen 80;
    server_name localhost;

    # Internal auth subrequest handler
    location = /_auth {
      internal;
    proxy_pass http://backend/api/auth/verify  ;
    proxy_pass_request_body off;  # don't forward the client body
    proxy_set_header Content-Length "";
    
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header X-Role $auth_role;
    }

    # Admin pages
    location ^~ /admin/ {
      auth_request /_auth;
      auth_request_set $auth_role "Admin";
      proxy_set_header X-Role $auth_role;

      
      error_page 401 = @to_login;
      error_page 403 = @to_forbidden;

      root      /usr/share/nginx/html;
      index     index.html;
      try_files $uri $uri/ $uri.html =404;
    }

    # Manager pages
    location ^~ /manager/ {
      auth_request /_auth;
      auth_request_set $auth_role "Technicien";
      proxy_set_header X-Role $auth_role;

      
      error_page 401 = @to_login;
      error_page 403 = @to_forbidden;

      root      /usr/share/nginx/html;
      index     index.html;
      try_files $uri $uri/ $uri.html =404;
    }

    # Employee pages
    location ^~ /employee/ {
      auth_request /_auth;
      auth_request_set $auth_role "Employ√©";
      proxy_set_header X-Role $auth_role;

      
      error_page 401 = @to_login;
      error_page 403 = @to_forbidden;

      root      /usr/share/nginx/html;
      index     index.html;
      try_files $uri $uri/ $uri.html =404;
    }

    # Public (no auth)
    location / {
      root        /usr/share/nginx/html;
      index       index.html;
      try_files   $uri $uri/ $uri.html =404;
    }

    # Redirect handlers
    location @to_login {
      return 302 /login;
    }
    location @to_forbidden {
      return 302 /403.html;
    }
  }
}
